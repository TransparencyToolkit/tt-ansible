---
# install and configure the OCRServer component of Transparency Toolkit

- name: Fetch OCRServer source code
  register: ocrserver
  async: 3600
  poll: 10
  git:
    depth: 1
    dest: OCRServer
    repo: https://github.com/TransparencyToolkit/OCRServer
    umask: "0077"

- name: install dependencies
  apt:
    state: latest
    install_recommends: no
    cache_valid_time: 7200
    update_cache: yes
    name:
      - graphicsmagick
      - poppler-data
      - ghostscript
      - tesseract-ocr
      - pdftk
      - openjdk-8-jre
      #- openjdk-8-jdk
      - libreoffice
      - libcurl3
      - libcurl3-gnutls
      - libcurl4-openssl-dev

- name: make sure we have ruby
  include_role: name=our_ruby

- name: Check if we need to fetch Tika
  stat: path=tika-server-{{ tika_version }}.jar.asc
  register: tika

- name: Create temporary directory for Tika GPG key
  tempfile: state=directory suffix=.tika.gpg
  register: tika_gpg_dir # tika_gpg_dir.path

- name: fetch tika-server keys
  command: # from 'bob' from https://people.apache.org/keys/group/tika.asc
    gpg --homedir '{{ tika_gpg_dir.path }}'
        --recv-key '833C1CC4926C1DDE29BB8731E4032DC4EF0CF38A'

- name: fetch tika-server signature
  command:
    curl 'https://archive.apache.org/dist/tika/tika-server-{{ tika_version }}.jar.asc'
         -o tika-server-{{ tika_version }}.jar.asc

- name: fetch tika-server jar file
  when: not tika.stat.exists
  command:
    curl 'https://archive.apache.org/dist/tika/tika-server-{{ tika_version }}.jar'
         -o tika-server-{{ tika_version }}.jar

- name: verify tika-server signature
  command:
    gpg --homedir '{{ tika_gpg_dir.path }}'
        --verify 'tika-server-{{ tika_version }}.jar.asc'
        'tika-server-{{ tika_version }}.jar'

- name: Include IndexServer dependency
  include_role: name=index_server

- name: install ruby gem dependencies
  command: bash -lc 'gem install doc_integrity_check mimemagic docsplit curb'

- name: Install Tika service
  become: true
  template:
    src: tika.service.j2
    dest: /usr/lib/systemd/system/tika.service
    mode: ugo=r

- name: Restart Tika systemd service
  become: true
  systemd:
    state: restarted
    daemon_reload: yes
    name: tika

- name: Wait for git repos to sync
  async_status:
    jid: "{{ ocrserver.ansible_job_id }}"
  retries: 600
  delay: 5
  until: ocrserver.finished

- name: Install OCRServer service
  become: true
  template:
    src: ocrserver.service.j2
    dest: /usr/lib/systemd/system/ocrserver.service
    mode: ugo=r

- name: Creates ocrserver.service.d directory
  become: true
  file: path=/etc/systemd/system/ocrserver.service.d/ state=directory

- name: set environment variables in systemd conf
  become: true
  blockinfile:
    create: yes
    mode: ug=r,o=
    dest: /etc/systemd/system/ocrserver.service.d/{{ item.name }}.conf
    content: |
      [Service]
      Environment="{{item.name}}={{ item.value }}"
  with_items:
    - {name: 'indexserver_url', value: '{{ indexserver_url }}' }
    - {name: 'gpg_signer', value: '{{ gpg_signer }}'}
    - {name: 'gpg_recipient', value: '{{ gpg_recipient }}'}

- name: Restart OCRServer systemd service
  become: true
  systemd:
    state: restarted
    daemon_reload: yes
    name: ocrserver

# TODO see OCRServer README for details on how to test
