---
# Install and configure target ruby version using 'rvm'

- name: Install rvm dependencies from apt
  become: true
  apt:
    state: latest
    install_recommends: no
    cache_valid_time: 7200
    update_cache: yes
    name:
      - curl
      - sudo
      - libcurl4-openssl-dev # undeclared/missing dependency for curb gem
- name: Check if we need to download RVM
  stat: path=~/.rvm/bin/rvm
  register: rvm

- name: Create temporary directory for rvm PGP keys
  when: not rvm.stat.exists
  tempfile: state=directory suffix=.rvm.gpg
  register: rvm_gpg_dir # rvm_gpg_dir.path
  # umask: "0077" TODO ?

- name: Fetch rvm.io PGP keys
  when: not rvm.stat.exists
  command: gpg --homedir '{{rvm_gpg_dir.path}}' \
    --keyserver hkps://hkps.pool.sks-keyservers.net \
    --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \
                7D2BAF1CF37B13E2069D6956105BD0E739499BDB
  # TODO should pin CA?

- name: Make GPG -trust- the keys.
  when: not rvm.stat.exists
  command: echo "7D2BAF1CF37B13E2069D6956105BD0E739499BDB:5:\n\
                 409B6B1796C275462A1703113804BB82D39DC0E3:5:" \
           | gpg --homedir '{{ rvm_gpg_dir.path }}' --batch --import-ownertrust

- name: Fetch rvm.io install script
  when: not rvm.stat.exists
  get_url:
    url: https://raw.githubusercontent.com/rvm/rvm/master/binscripts/rvm-installer
    dest: '{{ cwd }}/rvm-installer'
    mode: u=rx

- name: Fetch rvm.io install script SIGNATURE
  when: not rvm.stat.exists
  get_url:
    url: https://raw.githubusercontent.com/rvm/rvm/master/binscripts/rvm-installer.asc
    dest: '{{ cwd }}/rvm-installer.asc'
    mode: u=rx

- name: Verify rvm.io install script SIGNATURE
  when: not rvm.stat.exists
  command: gpg --homedir '{{ rvm_gpg_dir.path }}' --batch \
               --verify rvm-installer.asc rvm-installer

- name: Install rvm
  when: not rvm.stat.exists
  become: true
  command: bash rvm-installer

- name: install target ruby version
  become: true
  command: bash -lc 'rvm install --disable-install-doc {{ ruby_version }}'


- name: adding current user to RVM backdoor group
  become: true
  user:
    name: "{{ ansible_user }}"
    append: yes
    groups: rvm

- name: enable target ruby version by default
  become: true
  command: bash -lc 'rvm alias create default {{ ruby_version }}'

- name: ensure target ruby version is being used
  command: bash -lc "ruby -v | grep
    '^ruby {{ ruby_version.replace('.','\.') }}'"

- name: install bundler
  become: true
  command: bash -lc 'gem install bundler'
