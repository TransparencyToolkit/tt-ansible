---
# Install and configure target ruby version using 'rvm'

- name: Install rvm dependencies from apt
  become: true
  apt:
    state: latest
    install_recommends: no
    cache_valid_time: 7200
    update_cache: yes
    name:
      - curl
      - sudo
      - libcurl4-openssl-dev # undeclared/missing dependency for curb gem

- name: Check if we need to download RVM (/usr/local)
  stat: path=/usr/local/rvm/bin/rvm
  register: rvm_bin

- name: Check if we need to download RVM (/etc/profile)
  stat: path=/etc/profile.d/rvm.sh
  register: rvm_profile

- set_fact:
    install_rvm="{{ not (rvm_bin.stat.exists and rvm_profile.stat.exists) }}"

- name: Create temporary directory for rvm PGP keys
  when: install_rvm
  tempfile: state=directory suffix=.rvm.gpg
  register: rvm_gpg_dir # rvm_gpg_dir.path
  # umask: "0077" TODO ?

- name: Fetch rvm.io PGP keys
  when: install_rvm
  command: gpg --homedir '{{rvm_gpg_dir.path}}' \
    --keyserver hkps://hkps.pool.sks-keyservers.net \
    --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \
                7D2BAF1CF37B13E2069D6956105BD0E739499BDB
  # TODO should pin CA?

- name: Make GPG -trust- the keys.
  when: install_rvm
  command: echo "7D2BAF1CF37B13E2069D6956105BD0E739499BDB:5:\n\
                 409B6B1796C275462A1703113804BB82D39DC0E3:5:" \
           | gpg --homedir '{{ rvm_gpg_dir.path }}' --batch --import-ownertrust

- name: Fetch rvm.io install script
  when: install_rvm
  get_url:
    url: https://raw.githubusercontent.com/rvm/rvm/master/binscripts/rvm-installer
    dest: '{{ cwd }}/rvm-installer'
    mode: 0500 #u=rx

- name: Fetch rvm.io install script SIGNATURE
  when: install_rvm
  get_url:
    url: https://raw.githubusercontent.com/rvm/rvm/master/binscripts/rvm-installer.asc
    dest: '{{ cwd }}/rvm-installer.asc'
    mode: 0500 # u=rx

- name: Verify rvm.io install script SIGNATURE
  when: install_rvm
  command: gpg --homedir '{{ rvm_gpg_dir.path }}' --batch \
               --verify rvm-installer.asc rvm-installer

- name: Install rvm
  when: install_rvm
  become: true
  command: bash -lc '{{ cwd }}/rvm-installer'

- name: install target ruby version
  become: true
  command: bash -lc 'rvm install --disable-install-doc {{ ruby_version }}'


- name: adding current user to RVM backdoor group
  become: true
  user:
    name: "{{ ansible_user }}"
    append: yes
    groups: rvm

- name: enable target ruby version by default
  become: true
  command: bash -lc 'rvm alias create default {{ ruby_version }}'

- name: ensure target ruby version is being used
  command: bash -lc "ruby -v | grep
    '^ruby {{ ruby_version.replace('.','\.') }}'"

- name: find rvm gemrc path
  shell: bash -lc "ruby -e 'puts File.dirname(Gem::ConfigFile::SYSTEM_WIDE_CONFIG_FILE)'"
  register: gemrc_path

- name: make sure is a etc/ directory for the rvm gemrc file
  become: true
  file:
    mode: 0755 # = o+rwx,g+rx,o+rx
    path: "{{gemrc_path.stdout}}"
    state: directory

- name: make sure is a gemrc file in the etc/ directory
  become: true
  file:
    mode: 0544 # = o+rw,g+r,o+r
    path: "{{gemrc_path.stdout}}/gemrc"
    state: touch

- name: try to make the gem tool not install documentation or upgrade gems
  become: true
  blockinfile:
    dest: "{{gemrc_path.stdout}}/gemrc"
    content: |
      gem: --no-rdoc --no-ri --no-document --conservative

- name: install bundler
  become: true
  command: bash -lc 'gem install bundler'
