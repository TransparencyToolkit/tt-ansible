---
## depends on rails, ruby, jdk, jre
## depends on DocManager, ?LG?

- name: Catalyst - Install apt/package dependencies
  become: true
  apt:
    state: latest
    install_recommends: no
    cache_valid_time: 7200
    update_cache: yes
    name:
      - sqlite3
      - libsqlite3-dev
      - libidn11-dev
      - hunspell
      - unzip
      # on debian libcurl4 now conflicts libcurl3:
      #- libcurl3
      #- libcurl3-gnutls
      - libcurl4-openssl-dev
      - default-jre-headless # java for Stanford NER
      #- default-jdk-headless # java for Stanford NER (TODO jdk needed?)
      - automake # bundle install cld
      - autoconf # bundle install cld

- name: Fetch Catalyst source code
  register: catalyst
  async: 3600
  poll: 10
  retries: 5
  git:
    depth: 1
    dest: Catalyst
    repo: https://github.com/TransparencyToolkit/Catalyst.git
    umask: "0077"
    recursive: no
    track_submodules: no

- name: Check if we need to install Stanford NER service
  stat: path=/lib/systemd/system/stanford-ner.service
  register: stanford_installed

- name: Catalyst - Fetch Stanford NER zip-file
  when: not stanford_installed.stat.exists
  register: stanford_ner
  async: 3600
  poll: 10
  retries: 5
  get_url:
    checksum: sha256:e37b0094040c95e98799d849a7be2f4967de6b786f0b07360d179756bd4dce95
    mode: 0400 # u=r,go=
    timeout: 25
    dest: "{{ cwd }}/{{ stanford_ner_version }}.zip"
    url: "https://nlp.stanford.edu/software/{{ stanford_ner_version }}.zip"
    validate_certs: yes
# TODO fetch iff (dest doesn't exist || checksum doesn't match)
# TODO check stanford_ner.checksum_dest && stanford_ner.size == 179695580
# sha1:80d8d4aebb6812ee43ceff0f7c611ed86256bd72

- name: Catalyst - make directory for Stanford NER
  file: path="{{ cwd }}/{{ stanford_ner_version }}" state=directory

# we keep the date in the folder name to ensure that an update to this
# role will fetch the most recent version specified here.
- name: Catalyst - unzip Stanford NER
  when: not stanford_installed.stat.exists
  unarchive:
    copy: no
    creates: "{{ cwd }}/{{ stanford_ner_version }}/{{ stanford_ner_version }}/stanford-ner.jar"
    dest: "{{ cwd }}/{{ stanford_ner_version }}"
    mode: 0500 # u=rx
    src: "{{ stanford_ner_version }}.zip"

- name: Install Stanford NER service
  when: not stanford_installed.stat.exists
  become: true
  template:
    src: stanford-ner.service.j2
    dest: /lib/systemd/system/stanford-ner.service
    mode: 0444 # ugo=r

- name: Create stanford-ner.service.d directory
  become: true
  file: path=/etc/systemd/system/stanford-ner.service.d/ state=directory

- name: Restart Stanford-NER systemd service
  become: true
  systemd:
    state: restarted
    masked: no
    daemon_reload: yes
    name: stanford-ner

- name: Ensure Stanford-NER service has started
  become: true
  service: name=stanford-ner state=started enabled=yes masked=no

  #      - name: Wait for git repositories to sync
  #        retries: 60
  #        delay: 60
  #        until: docmanager.finished and lookingglass.finished and testdata.finished

- name: Catalyst - gem install cld working around obv wrong C code
  become: true
  command: bash -lc 'CXXFLAGS=-Wno-narrowing gem install cld -v 0.7.0'

- name: Catalyst - bundle install
  become: true
  command: chdir={{cwd}}/Catalyst bash -lc 'bundle install'

- name: Catalyst - generate SECRET_KEY_BASE
  shell: "xxd -ps -l 20 /dev/urandom"
  register: catalyst_secret_key_base_fh

- name: Catalyst - check if we need to make a new database
  stat: path="{{cwd}}/Catalyst/db/production.sqlite3"
  register: production_db

- name: Catalyst - rake db:create db:setup
  when: not production_db.stat.exists
  command: chdir={{cwd}}/Catalyst bash -lc 'RAILS_ENV=production SECRET_KEY_BASE="{{ catalyst_secret_key_base_fh.stdout }}" bundle exec rake db:create db:setup'

- name: Catalyst - migrate
  when: production_db.stat.exists
  command: chdir={{cwd}}/Catalyst bash -lc 'RAILS_ENV=production SECRET_KEY_BASE="{{ catalyst_secret_key_base_fh.stdout }}" bundle exec rake db:migrate'

- name: Install Catalyst service
  become: true
  template:
    src: catalyst.service.j2
    dest: /lib/systemd/system/catalyst.service
    mode: 0444 # ugo=r

- name: Create catalyst.service.d directory
  become: true
  file: path=/etc/systemd/system/catalyst.service.d/ state=directory

- name: set environment variables in systemd conf
  become: true
  blockinfile:
    create: yes
    mode: 0440 # ug=r,o=
    dest: /etc/systemd/system/catalyst.service.d/{{ item.name }}.conf
    content: |
      [Service]
      Environment="{{item.name}}={{ item.value }}"
  with_items:
    - {name: 'SECRET_KEY_BASE', value: '{{ catalyst_secret_key_base_fh.stdout }}' }
    - {name: 'DOCMANAGER_URL', value: '{{ docmanager_url }}' }
    - {name: 'RAILS_ENV', value: 'production' }

- name: Restart Catalyst systemd service
  become: true
  systemd:
    state: restarted
    masked: no
    daemon_reload: yes
    name: catalyst

- name: Ensure Catalyst service is stopped and disabled
  become: true
  service: name=catalyst state=stopped enabled=no masked=yes

- name: Ensure Stanford-NER service is stopped and disabled
  become: true
  service: name=stanford-ner state=stopped enabled=no masked=yes
