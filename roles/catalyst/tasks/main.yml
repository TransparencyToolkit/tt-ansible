---
## depends on rails, ruby, jdk, jre
## depends on DocManager, ?LG?

- name: Catalyst - Install apt/package dependencies
  become: true
  apt:
    state: latest
    install_recommends: no
    cache_valid_time: 7200
    update_cache: yes
    name:
      - sqlite3
      - libsqlite3-dev
      - libidn11-dev
      - hunspell
      - libcurl3
      - libcurl3-gnutls
      - libcurl4-openssl-dev
      - default-jre-headless # java for Stanford NER
      - default-jdk-headless # java for Stanford NER (TODO jdk needed?)
      - automake # bundle install cld
      - autoconf # bundle install cld

- name: Fetch Catalyst source code
  register: catalyst
  async: 3600
  poll: 10
  git:
    depth: 1
    dest: Catalyst
    repo: https://github.com/TransparencyToolkit/Catalyst.git
    umask: "0077"
    recursive: no
    track_submodules: no

- name: Catalyst - Fetch Stanford NER zip-file
  register: stanford_ner
  async: 3600
  poll: 10
  get_url:
    checksum: sha256:e37b0094040c95e98799d849a7be2f4967de6b786f0b07360d179756bd4dce95
    mode: u=r
    timeout: 25
    dest: "{{ cwd }}/{{ stanford_ner_version }}.zip"
    url: "https://nlp.stanford.edu/software/{{ stanford_ner_version }}.zip"
    validate_certs: yes
# TODO fetch iff (dest doesn't exist || checksum doesn't match)
# TODO check stanford_ner.checksum_dest && stanford_ner.size == 179695580
# sha1:80d8d4aebb6812ee43ceff0f7c611ed86256bd72

- name: Catalyst - make directory for Stanford NER
  file: path="{{ cwd }}/{{ stanford_ner_version }}" state=directory

# we keep the date in the folder name to ensure that an update to this
# role will fetch the most recent version specified here.
- name: Catalyst - unzip Stanford NER
  unarchive:
    copy: no
    creates: "{{ cwd }}/{{ stanford_ner_version }}/stanford-ner.jar"
    dest: "{{ cwd }}/{{ stanford_ner_version }}/"
    mode: u=rx
    src: "{{ stanford_ner_version }}.zip"

- name: Install Stanford NER service
  become: true
  template:
    src: stanford-ner.service.j2
    dest: /lib/systemd/system/stanford-ner.service
    mode: ugo=r

- name: Create stanford-ner.service.d directory
  become: true
  file: path=/etc/systemd/system/stanford-ner.service.d/ state=directory

- name: Restart Stanford-NER systemd service
  become: true
  systemd:
    state: restarted
    daemon_reload: yes
    name: stanford-ner

- name: Ensure Stanford-NER service has started
  become: true
  service: name=stanford-ner state=started enabled=yes


- name: Catalyst - Install DocManager role
  include_role: name=doc_manager allow_duplicates=False

- name: Catalyst - Include ruby role
  include_role: name=our_ruby allow_duplicates=False

  #      - name: Wait for git repositories to sync
  #        retries: 60
  #        delay: 60
  #        until: docmanager.finished and lookingglass.finished and testdata.finished

- name: Catalyst - gem install cld working around obv wrong C code
  become: true
  command: bash -lc 'CXXFLAGS=-Wno-narrowing gem install cld -v 0.7.0'

- name: Catalyst - bundle install
  become: true
  command: chdir=Catalyst bash -lc 'bundle install'

- name: Catalyst - rake db:setup
  command: chdir=Catalyst bash -lc 'rake db:create'

# TODO are we sure we want to reset automatically?
- name: Catalyst - rake db:reset
  command: chdir=Catalyst bash -lc 'rake db:reset'

- name: Catalyst - generate SECRET_KEY_BASE
  shell: "xxd -ps -l 20 /dev/urandom"
  register: catalyst_secret_key_base_fh

- name: Install Catalyst service
  become: true
  template:
    src: catalyst.service.j2
    dest: /lib/systemd/system/catalyst.service
    mode: ugo=r

- name: Create catalyst.service.d directory
  become: true
  file: path=/etc/systemd/system/catalyst.service.d/ state=directory

- name: set environment variables in systemd conf
  become: true
  blockinfile:
    create: yes
    mode: ug=r,o=
    dest: /etc/systemd/system/catalyst.service.d/{{ item.name }}.conf
    content: |
      [Service]
      Environment="{{item.name}}={{ item.value }}"
  with_items:
    - {name: 'SECRET_KEY_BASE', value: '{{ catalyst_secret_key_base_fh.stdout }}' }
    - {name: 'DOCMANAGER_URL', value: '{{ docmanager_url }}' }

- name: Restart Catalyst systemd service
  become: true
  systemd:
    state: restarted
    daemon_reload: yes
    name: catalyst

- name: Ensure Catalyst service has started
  become: true
  service: name=catalyst state=started enabled=yes